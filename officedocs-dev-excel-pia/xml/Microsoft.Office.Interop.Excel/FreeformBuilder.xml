<Type Name="FreeformBuilder" FullName="Microsoft.Office.Interop.Excel.FreeformBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ae4621931af0643fa07ae14d1065da43e725e19b5754abfd20ae2a4d9b5f1e0" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54509161" /></Metadata><TypeSignature Language="C#" Value="public interface FreeformBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract FreeformBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.FreeformBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface FreeformBuilder" />
  <TypeSignature Language="C++ CLI" Value="public interface class FreeformBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa a geometria de uma forma livre enquanto esta está sendo construída.</summary>
    <remarks><para>Use o <see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> método para retornar um objeto <b>FreeformBuilder.</b> Use o <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> método para adicionar nós ao freefrom. Use o <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> método para criar a forma definida no objeto <b>FreeformBuilder</b> e adicioná-la à <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> coleção.</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNodes">
      <MemberSignature Language="C#" Value="public void AddNodes (Microsoft.Office.Core.MsoSegmentType SegmentType, Microsoft.Office.Core.MsoEditingType EditingType, float X1, float Y1, object X2, object Y2, object X3, object Y3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNodes([in]valuetype Microsoft.Office.Core.MsoSegmentType SegmentType, [in]valuetype Microsoft.Office.Core.MsoEditingType EditingType, [in]float32 X1, [in]float32 Y1, [in]object X2, [in]object Y2, [in]object X3, [in]object Y3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNodes (SegmentType As MsoSegmentType, EditingType As MsoEditingType, X1 As Single, Y1 As Single, Optional X2 As Object, Optional Y2 As Object, Optional X3 As Object, Optional Y3 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1762)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SegmentType" Type="Microsoft.Office.Core.MsoSegmentType" />
        <Parameter Name="EditingType" Type="Microsoft.Office.Core.MsoEditingType" />
        <Parameter Name="X1" Type="System.Single" />
        <Parameter Name="Y1" Type="System.Single" />
        <Parameter Name="X2" Type="System.Object" />
        <Parameter Name="Y2" Type="System.Object" />
        <Parameter Name="X3" Type="System.Object" />
        <Parameter Name="Y3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SegmentType">Obrigatório <see cref="T:Microsoft.Office.Interop.Office.MsoSegmentType" /> . O tipo de segmento a ser adicionado. <b>MsoSegmentType</b> pode ser uma destas constantes:<b>msoSegmentLine</b><b>msoSegmentCurve</b></param>
        <param name="EditingType">Obrigatório <see cref="T:Microsoft.Office.Interop.Office.MsoEditingType" /> . A propriedade de edição do vértice. <b>MsoEditingType</b> pode ser uma destas constantes:<b>msoEditingAuto</b><b>msoEditingCorner</b>Cannot be <b>msoEditingSmooth</b> ou <b>msoEditingSymmetric</b>. Se <paramref name="SegmentType" /> for <b>msoSegmentLine</b>, <paramref name="EditingType" /> deve ser <b>msoEditingAuto</b>.</param>
        <param name="X1">Obrigatório <b>Single</b>. Se o do novo segmento for <paramref name="EditingType" /> <b>msoEditingAuto</b>, este argumento especificará a distância horizontal (em pontos) do canto superior esquerdo do documento até o ponto final do novo segmento. Se o do novo nó for <paramref name="EditingType" /> <b>msoEditingCorner,</b>este argumento especificará a distância horizontal (em pontos) do canto superior esquerdo do documento até o primeiro ponto de controle do novo segmento.</param>
        <param name="Y1">Obrigatório <b>Single</b>. Se o do novo segmento for <paramref name="EditingType" /> <b>msoEditingAuto</b>, este argumento especificará a distância horizontal (em pontos) do canto superior esquerdo do documento até o ponto final do novo segmento. Se o do novo nó for <paramref name="EditingType" /> <b>msoEditingCorner,</b>este argumento especificará a distância horizontal (em pontos) do canto superior esquerdo do documento até o primeiro ponto de controle do novo segmento.</param>
        <param name="X2">Objeto <b>Opcional</b>. Se o do novo segmento for <paramref name="EditingType" /> <b>msoEditingCorner,</b>este argumento especificará a distância horizontal (em pontos) do canto superior esquerdo do documento até o segundo ponto de controle do novo segmento. Se o <paramref name="EditingType" /> do novo segmento for <b>msoEditingAuto</b>, não especifique um valor para esse argumento.</param>
        <param name="Y2">Objeto <b>Opcional</b>. Se o do novo segmento for <paramref name="EditingType" /> <b>msoEditingCorner,</b>este argumento especificará a distância horizontal (em pontos) do canto superior esquerdo do documento até o segundo ponto de controle do novo segmento. Se o <paramref name="EditingType" /> do novo segmento for <b>msoEditingAuto</b>, não especifique um valor para esse argumento.</param>
        <param name="X3">Objeto <b>Opcional</b>. Se o do novo segmento for <paramref name="EditingType" /> <b>msoEditingCorner,</b>este argumento especificará a distância horizontal (em pontos) do canto superior esquerdo do documento até o ponto final do novo segmento. Se o <paramref name="EditingType" /> do novo segmento for <b>msoEditingAuto</b>, não especifique um valor para esse argumento.</param>
        <param name="Y3">Objeto <b>Opcional</b>. Se o do novo segmento for <paramref name="EditingType" /> <b>msoEditingCorner,</b>este argumento especificará a distância vertical (em pontos) do canto superior esquerdo do documento até o ponto final do novo segmento. Se o <paramref name="EditingType" /> do novo segmento for <b>msoEditingAuto</b>, não especifique um valor para esse argumento.</param>
        <summary>Adiciona um nó a uma forma livre.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa o Microsoft Excel aplicativo.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape ConvertToShape ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape ConvertToShape() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToShape () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ ConvertToShape();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1766)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma forma que tem as características geométricas do objeto <see cref="T:Microsoft.Office.Interop.Excel.FreeformBuilder" /> especificado. Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto que representa a nova forma.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Observação</b>   Você deve aplicar o <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> método a um objeto <b>FreeformBuilder</b> pelo menos uma vez antes de usar o <b>método ConvertToShape.</b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado.</summary>
        <value>To be added.</value>
        <remarks><para>Se o objeto foi criado no Microsoft Excel, essa propriedade retornará a sequência XCEL, que é equivalente ao número hexadecimal 5843454C.</para>
          <para>A propriedade <b>Creator</b> foi projetada para ser usada no Microsoft Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres. Por exemplo, o Microsoft Excel possui o código de criador XCEL.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna o objeto pai para o objeto especificado.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>