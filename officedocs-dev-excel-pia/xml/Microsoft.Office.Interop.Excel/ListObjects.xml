<Type Name="ListObjects" FullName="Microsoft.Office.Interop.Excel.ListObjects">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9cc07e93edc8ddc2aad7de45e3e329198adf19a1c5e94b1eb33d26d76ac13424" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54517056" /></Metadata><TypeSignature Language="C#" Value="public interface ListObjects : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ListObjects implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ListObjects" />
  <TypeSignature Language="VB.NET" Value="Public Interface ListObjects&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ListObjects : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024470-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Uma coleção de todos os <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objetos em uma planilha. Cada <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objeto representa uma lista na planilha.</summary>
    <remarks><para>Use a <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" /> propriedade do objeto para retornar a coleção <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> <b>ListObjects.</b></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::ListObject ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>Reservado para uso interno.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject Add (Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, object Source, object LinkSource, Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ListObject Add([in]valuetype Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType, [in]object Source, [in]object LinkSource, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.Add(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional SourceType As XlListObjectSourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, Optional Source As Object, Optional LinkSource As Object, Optional XlListObjectHasHeaders As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, Optional Destination As Object) As ListObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2085)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="Microsoft.Office.Interop.Excel.XlListObjectSourceType" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="LinkSource" Type="System.Object" />
        <Parameter Name="XlListObjectHasHeaders" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">Opcional <b>XlListObjectSourceType</b>. Indica o tipo de fonte da consulta. Pode ser uma das seguintes <b>constantes XlListObjectSourceType:</b> <b>xlSrcExternal</b> ou <b>xlSrcRange</b>. Se omitido, <paramref name="SourceType" /> o padrão será <b>xlSrcRange</b>.</param>
        <param name="Source">Opcional quando <paramref name="SourceType" /> é <b>xlSrcRange</b>. Um <see cref="T:Microsoft.Office.Interop.Excel.Range" /> objeto que representa a fonte de dados. Se omitido, o padrão será o intervalo retornado pelo código de detecção <paramref name="Source" /> de intervalo de lista. Obrigatório quando <paramref name="SourceType" /> for <b>xlSrcExternal</b>. Uma matriz de <b>valores String</b> especificando uma conexão com a fonte. Elemento#Contents0URL para SharePoint site 1ListName 2ViewGUID</param>
        <param name="LinkSource">Opcional <b>Boolean</b>. Indica se uma fonte de dados externa deve ser vinculada ao objeto <b>ListObject</b>. Se <paramref name="SourceType" /> for <b>xlSrcExternal,</b>o padrão será <b>True</b>. Inválido se <paramref name="SourceType" /> for <b>xlSrcRange</b>e retornará um erro se não for omitido.</param>
        <param name="XlListObjectHasHeaders">Objeto <b>Opcional</b>. Uma <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> constante que indica se os dados que estão sendo importados têm rótulos de coluna. Quado o Source não tem cabeçalhos, o Excel os gera automaticamente.</param>
        <param name="Destination">Objeto <b>Opcional</b>. Um <b>objeto Range</b> especificando uma referência de célula única como o destino do canto superior esquerdo do novo objeto list. Se o objeto <b>Range</b> se refere a mais de uma célula, um erro é gerado. O <paramref name="Destination" /> argumento deve ser especificado quando estiver definido como <paramref name="SourceType" /> <b>xlSrcExternal</b>. O <paramref name="Destination" /> argumento será ignorado se estiver definido como <paramref name="SourceType" /> <b>xlSrcRange</b>. O intervalo de destino deve estar na planilha que contém a coleção <see cref="T:Microsoft.Office.Interop.Excel.ListObjects" /> especificada. Novas colunas serão inseridas no <paramref name="Destination" /> para caber na nova lista. Portanto, os dados existentes não serão substituídos.</param>
        <summary>Cria um novo objeto de lista. Retorna um <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objeto.</summary>
        <returns>To be added.</returns>
        <remarks><para>Quando a lista tiver cabeçalhos, a primeira linha de células será convertida em <b>Text</b>, se ainda não estiver definida como texto. A conversão será baseada no texto visível na célula. Isso significa que, se existir um valor de data com um formato <b>Date</b> que é alterado de acordo com o local, a conversão em uma lista poderá produzir resultados diferentes, dependendo do local do sistema atual. Além disso, se duas células na linha de cabeçalho contiverem o mesmo texto visível, será acrescentado um <b>Integer</b> incremental para tornar cada cabeçalho de coluna exclusivo.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEx">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject AddEx (Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, object Source, object LinkSource, Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, object Destination, object TableStyleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ListObject AddEx([in]valuetype Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType, [in]object Source, [in]object LinkSource, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders, [in]object Destination, [in]object TableStyleName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.AddEx(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddEx (Optional SourceType As XlListObjectSourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, Optional Source As Object, Optional LinkSource As Object, Optional XlListObjectHasHeaders As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, Optional Destination As Object, Optional TableStyleName As Object) As ListObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="Microsoft.Office.Interop.Excel.XlListObjectSourceType" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="LinkSource" Type="System.Object" />
        <Parameter Name="XlListObjectHasHeaders" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="TableStyleName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">To be added.</param>
        <param name="Source">To be added.</param>
        <param name="LinkSource">To be added.</param>
        <param name="XlListObjectHasHeaders">To be added.</param>
        <param name="Destination">To be added.</param>
        <param name="TableStyleName">To be added.</param>
        <summary>Reservado para uso interno.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa o Microsoft Excel aplicativo. Somente leitura.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna o número de objetos na coleção. <b>Integer</b> somente leitura.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um inteiro de 32 bits que indica o aplicativo no qual esse objeto foi criado. Se o objeto foi criado no Microsoft Excel, essa propriedade retornará a sequência XCEL, que é equivalente ao número hexadecimal 5843454C. Somente leitura <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> .</summary>
        <value>To be added.</value>
        <remarks><para>A propriedade <b>Creator</b> foi projetada para ser usada no Microsoft Excel para Macintosh, onde cada aplicativo possui um código de criador de quatro caracteres. Por exemplo, o Microsoft Excel possui o código de criador XCEL.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::ListObject ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">Objeto <b>Obrigatório</b>. O nome ou número de índice do objeto.</param>
        <summary>Retorna um único objeto de uma coleção.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna o objeto pai para o objeto especificado. Somente leitura.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>